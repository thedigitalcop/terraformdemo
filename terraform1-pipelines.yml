# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: Terraform_SPN

steps:
- script: echo $(Client_Id)
  displayName: 'Run a one-line script'

- task: TerraformInstaller@2
  inputs:
    terraformVersion: 'latest'

- task: TerraformCLI@2
  inputs:
    command: 'init'
    commandOptions: '-var client_id=$(Client_Id) -var client_secret=$(Client_Secret) -var tenant_id=$(Tenant_Id) -var subscription_id=$(Subscription_Id)'
    backendType: 'azurerm'
    backendServiceArm: 'TerraformSPN'
    backendAzureRmTenantId: '$(Tenant_Id)'
    backendAzureRmSubscriptionId: '$(Subscription_Id)'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'ptd-pulse'
    backendAzureRmResourceGroupLocation: 'Central India'
    backendAzureRmStorageAccountName: 'prdsaterraform'
    backendAzureRmContainerName: 'terraformstate'
    backendAzureRmKey: 'main.tfstate'
    allowTelemetryCollection: true

- task: TerraformCLI@2
  inputs:
    command: 'destroy'
    environmentServiceName: 'TerraformSPN'
    providerAzureRmSubscriptionId: '$(Subscription_Id)'
    commandOptions: '-var client_id=$(Client_Id) -var client_secret=$(Client_Secret) -var tenant_id=$(Tenant_Id) -var subscription_id=$(Subscription_Id)'
    allowTelemetryCollection: true
